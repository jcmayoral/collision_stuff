#!/usr/bin/env python

PACKAGE = "collision_detector_diagnoser"
import roslib;roslib.load_manifest(PACKAGE)

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("sensor_sources",    int_t,    0, "Number of Sensor Inputs", 3,  2, 5)
gen.add("percentage_threshold", double_t, 0 , "A double parameter",.1, 0,   1)
#gen.add("str_param",    str_t,    0, "A string parameter",  "Hello World")
gen.add("allow_filter",  bool_t,   0, "Filtering ",  False)

mode_enum = gen.enum([ gen.const("Simple_Activation",      int_t, 0, "Simple Matching"),
                       gen.const("Voting",     int_t, 1, "Voting Approach"),
                       gen.const("Weighting",     int_t, 2, "Weighting Approach")],
                       "Mode Selector")

gen.add("mode", int_t, 0, "Mode Selector", 0, 0, 3, edit_method=mode_enum)
gen.add("queue_size", int_t, 0, "Filter Queue Size", 10, 0, 20)

gen.add("age_penalty", double_t, 0 , "Age Penalty", 0.1, 0, 1)
gen.add("max_interval", double_t, 0 , "Max Interval duration",0.5, 0, 1)
gen.add("custom_filter", bool_t, 0 , "custom_filter", False)
gen.add("request_debug_mode", bool_t, 0 , "request_debug_mode", False)

gen.add("custom_timeout", int_t, 1 , "custom_timeout",20, 10, 1000)

exit(gen.generate(PACKAGE, "collision_detector_diagnoser_node", "diagnoser"))
